import{_ as a,c as i,o as t,aq as r}from"./chunks/framework.CYFbgU53.js";const o=JSON.parse('{"title":"插件","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.zhcndoc.com/plugins/"}],["meta",{"property":"og:title","content":"插件"}]]},"headers":[],"relativePath":"plugins/index.md","filePath":"plugins/index.md"}'),l={name:"plugins/index.md"};function s(n,e,p,h,c,u){return t(),i("div",null,[...e[0]||(e[0]=[r('<h1 id="plugins" tabindex="-1">插件 <a class="header-anchor" href="#plugins" aria-label="Permalink to “插件”">​</a></h1><div class="tip custom-block"><p class="custom-block-title">注意</p><p>Vite 旨在为常见的 web 开发工作提供开箱即用的支持。在搜索一个 Vite 或 Rollup 兼容插件之前，请先查看 <a href="./../guide/features.html">功能指引</a>。很多场景下，在 Rollup 项目中需要添加插件，而在 Vite 中已经内建支持了。</p></div><p>请查看 <a href="./../guide/using-plugins.html">使用插件</a> 一章了解更多插件使用方式。</p><h2 id="official-plugins" tabindex="-1">官方插件 <a class="header-anchor" href="#official-plugins" aria-label="Permalink to “官方插件”">​</a></h2><h3 id="vitejs-plugin-vue" tabindex="-1"><a href="https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue" target="_blank" rel="noreferrer">@vitejs/plugin-vue</a> <a class="header-anchor" href="#vitejs-plugin-vue" aria-label="Permalink to “@vitejs/plugin-vue”">​</a></h3><p>提供 Vue 3 单文件组件支持。</p><h3 id="vitejs-plugin-vue-jsx" tabindex="-1"><a href="https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue-jsx" target="_blank" rel="noreferrer">@vitejs/plugin-vue-jsx</a> <a class="header-anchor" href="#vitejs-plugin-vue-jsx" aria-label="Permalink to “@vitejs/plugin-vue-jsx”">​</a></h3><p>提供 Vue 3 JSX 支持（通过 <a href="https://github.com/vuejs/babel-plugin-jsx" target="_blank" rel="noreferrer">专用的 Babel 转换插件</a>).</p><h3 id="vitejs-plugin-react" tabindex="-1"><a href="https://github.com/vitejs/vite-plugin-react/tree/main/packages/plugin-react" target="_blank" rel="noreferrer">@vitejs/plugin-react</a> <a class="header-anchor" href="#vitejs-plugin-react" aria-label="Permalink to “@vitejs/plugin-react”">​</a></h3><p>使用 esbuild 和 Babel，以较小的软件包占用空间和使用 Babel 转换管道的灵活性实现快速 HMR。如果没有额外的 Babel 插件，在构建过程中只能使用 esbuild。</p><h3 id="vitejs-plugin-react-swc" tabindex="-1"><a href="https://github.com/vitejs/vite-plugin-react/tree/main/packages/plugin-react-swc" target="_blank" rel="noreferrer">@vitejs/plugin-react-swc</a> <a class="header-anchor" href="#vitejs-plugin-react-swc" aria-label="Permalink to “@vitejs/plugin-react-swc”">​</a></h3><p>在开发时会将 Babel 替换为 SWC。在生产环境构建期间，若使用了插件则会使用 SWC+esbuild，若没有使用插件则仅会用到 esbuild。对不需要非标准 React 扩展的大型项目，冷启动和模块热替换（HMR）将会有显著提升。</p><h3 id="vitejs-plugin-rsc" tabindex="-1"><a href="https://github.com/vitejs/vite-plugin-react/tree/main/packages/plugin-rsc" target="_blank" rel="noreferrer">@vitejs/plugin-rsc</a> <a class="header-anchor" href="#vitejs-plugin-rsc" aria-label="Permalink to “@vitejs/plugin-rsc”">​</a></h3><p>Vite 通过该插件支持 <a href="https://react.dev/reference/rsc/server-components" target="_blank" rel="noreferrer">React Server Components (RSC)</a>。它利用 <a href="/guide/api-environment.html">Environment API</a> 提供底层原语，React 框架可以使用这些原语来集成 RSC 功能。你可以通过以下方式尝试一个最小的独立 RSC 应用程序：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite@latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsc</span></span></code></pre></div><p>阅读<a href="https://github.com/vitejs/vite-plugin-react/tree/main/packages/plugin-rsc" target="_blank" rel="noreferrer">插件文档</a>了解更多详情。</p><h3 id="vitejs-plugin-legacy" tabindex="-1"><a href="https://github.com/vitejs/vite/tree/main/packages/plugin-legacy" target="_blank" rel="noreferrer">@vitejs/plugin-legacy</a> <a class="header-anchor" href="#vitejs-plugin-legacy" aria-label="Permalink to “@vitejs/plugin-legacy”">​</a></h3><p>为打包后的文件提供传统浏览器兼容性支持。</p><h2 id="community-plugins" tabindex="-1">社区插件 <a class="header-anchor" href="#community-plugins" aria-label="Permalink to “社区插件”">​</a></h2><p>查看 <a href="https://github.com/vitejs/awesome-vite#plugins" target="_blank" rel="noreferrer">awesome-vite</a> - 你也可以通过 PR 的方式将你的插件添加到此列表中。</p><h2 id="rollup-plugins" tabindex="-1">Rollup 插件 <a class="header-anchor" href="#rollup-plugins" aria-label="Permalink to “Rollup 插件”">​</a></h2><p><a href="./../guide/api-plugin.html">Vite 插件</a> 是 Rollup 插件接口的一种扩展。查看 <a href="./../guide/api-plugin.html#rollup-plugin-compatibility">Rollup 插件兼容性章节</a> 获取更多信息。</p>',22)])])}const d=a(l,[["render",s]]);export{o as __pageData,d as default};
