import{_ as k,I as p,c as o,o as r,aq as e,j as s,a as l,J as n,w as a}from"./chunks/framework.CYFbgU53.js";const _=JSON.parse('{"title":"共享选项","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.zhcndoc.com/config/shared-options"}],["meta",{"property":"og:title","content":"共享选项"}]]},"headers":[],"relativePath":"config/shared-options.md","filePath":"config/shared-options.md"}'),d={name:"config/shared-options.md"},g={id:"resolve-conditions",tabindex:"-1"},E={id:"resolve-mainfields",tabindex:"-1"},c={class:"language-ts"},y={class:"shiki shiki-themes github-light github-dark twoslash lsp",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},u={class:"line"},F={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},f={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},m={class:"line"},C={style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},b={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},v={class:"line"},A={style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},B={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},D={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},w={class:"line"},x={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},S={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},P={style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},j={style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},L={class:"line"},T={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},O={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},N={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},R={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},V={class:"line"},I={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},q={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},M={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},J={class:"line"},U={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},W={class:"line"},H={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},$={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}};function X(G,i,z,Y,K,Q){const h=p("NonInheritBadge"),t=p("v-menu");return r(),o("div",null,[i[112]||(i[112]=e(`<h1 id="shared-options" tabindex="-1">共享选项 <a class="header-anchor" href="#shared-options" aria-label="Permalink to “共享选项”">​</a></h1><p>除非另有说明，本节中的选项适用于所有开发、构建和预览。</p><h2 id="root" tabindex="-1">root <a class="header-anchor" href="#root" aria-label="Permalink to “root”">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>process.cwd()</code></li></ul><p>项目根目录（<code>index.html</code> 文件所在的位置）。可以是一个绝对路径，或者一个相对于该配置文件本身的相对路径。</p><p>更多细节请见 <a href="/guide/#index-html-and-project-root">项目根目录</a>。</p><h2 id="base" tabindex="-1">base <a class="header-anchor" href="#base" aria-label="Permalink to “base”">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>/</code></li><li><strong>相关：</strong> <a href="/config/server-options.html#server-origin"><code>server.origin</code></a></li></ul><p>开发或生产环境服务的公共基础路径。合法的值包括以下几种：</p><ul><li>绝对 URL 路径名，例如 <code>/foo/</code></li><li>完整的 URL，例如 <code>https://bar.com/foo/ </code>（域名部分在开发环境中不会被使用，因此该值与 <code>/foo/</code> 相同）</li><li>空字符串或 <code>./</code>（用于嵌入形式的开发）</li></ul><p>更多信息详见 <a href="/guide/build.html#public-base-path">公共基础路径</a>。</p><h2 id="mode" tabindex="-1">mode <a class="header-anchor" href="#mode" aria-label="Permalink to “mode”">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>&#39;development&#39;</code> 用于开发，<code>&#39;production&#39;</code> 用于构建</li></ul><p>在配置中指明将会把 <strong>serve 和 build</strong> 时的模式 <strong>都</strong> 覆盖掉。也可以通过命令行 <code>--mode</code> 选项来重写。</p><p>查看 <a href="/guide/env-and-mode.html">环境变量与模式</a> 章节获取更多细节。</p><h2 id="define" tabindex="-1">define <a class="header-anchor" href="#define" aria-label="Permalink to “define”">​</a></h2><ul><li><strong>类型：</strong> <code>Record&lt;string, any&gt;</code></li></ul><p>定义全局常量替换方式。其中每项在开发环境下会被定义在全局，而在构建时被静态替换。</p><p>Vite 使用 <a href="https://esbuild.github.io/api/#define" target="_blank" rel="noreferrer">esbuild define</a> 来进行替换，因此值的表达式必须是一个包含 JSON 可序列化值（null、boolean、number、string、array 或 object）或单一标识符的字符串。对于非字符串值，Vite 将自动使用 <code>JSON.stringify</code> 将其转换为字符串。</p><p><strong>示例：</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  define: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    __APP_VERSION__: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v1.0.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    __API_URL__: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;window.__backend_api_url&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>对于使用 TypeScript 的开发者来说，请确保在 <code>vite-env.d.ts</code> 文件中添加类型声明，以获得类型检查以及代码提示。</p><p>示例：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vite-env.d.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __APP_VERSION__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span></code></pre></div></div><h2 id="plugins" tabindex="-1">plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to “plugins”">​</a></h2><ul><li><strong>类型：</strong> <code>(Plugin | Plugin[] | Promise&lt;Plugin | Plugin[]&gt;)[]</code></li></ul><p>需要用到的插件数组。Falsy 虚值的插件将被忽略，插件数组将被扁平化（flatten）。查看 <a href="/guide/api-plugin.html">插件 API</a> 获取 Vite 插件的更多细节。</p><h2 id="publicdir" tabindex="-1">publicDir <a class="header-anchor" href="#publicdir" aria-label="Permalink to “publicDir”">​</a></h2><ul><li><strong>类型：</strong> <code>string | false</code></li><li><strong>默认：</strong> <code>&quot;public&quot;</code></li></ul><p>作为静态资源服务的文件夹。该目录中的文件在开发期间在 <code>/</code> 处提供，并在构建期间复制到 <code>outDir</code> 的根目录，并且始终按原样提供或复制而无需进行转换。该值可以是文件系统的绝对路径，也可以是相对于项目根目录的相对路径。</p><p>将 <code>publicDir</code> 设定为 <code>false</code> 可以关闭此项功能。</p><p>欲了解更多，请参阅 <a href="/guide/assets.html#the-public-directory"><code>public</code> 目录</a>。</p><h2 id="cachedir" tabindex="-1">cacheDir <a class="header-anchor" href="#cachedir" aria-label="Permalink to “cacheDir”">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>&quot;node_modules/.vite&quot;</code></li></ul><p>存储缓存文件的目录。此目录下会存储预打包的依赖项或 vite 生成的某些缓存文件，使用缓存可以提高性能。如需重新生成缓存文件，你可以使用 <code>--force</code> 命令行选项或手动删除目录。此选项的值可以是文件的绝对路径，也可以是以项目根目录为基准的相对路径。当没有检测到 package.json 时，则默认为 <code>.vite</code>。</p><h2 id="resolve-alias" tabindex="-1">resolve.alias <a class="header-anchor" href="#resolve-alias" aria-label="Permalink to “resolve.alias”">​</a></h2><ul><li><strong>类型：</strong><code>Record&lt;string, string&gt; | Array&lt;{ find: string | RegExp, replacement: string, customResolver?: ResolverFunction | ResolverObject }&gt;</code></li></ul><p>将会被传递到 <code>@rollup/plugin-alias</code> 作为 <a href="https://github.com/rollup/plugins/tree/master/packages/alias#entries" target="_blank" rel="noreferrer">entries 的选项</a>。也可以是一个对象，或一个 <code>{ find, replacement, customResolver }</code> 的数组。</p><p>当使用文件系统路径的别名时，请始终使用绝对路径。相对路径的别名值会原封不动地被使用，因此无法被正常解析。</p><p>更高级的自定义解析方法可以通过 <a href="/guide/api-plugin.html">插件</a> 实现。</p><div class="warning custom-block"><p class="custom-block-title">在 SSR 中使用</p><p>如果你已经为 <a href="/guide/ssr.html#ssr-externals">SSR 外部化的依赖</a> 配置了别名，你可能想要为真实的 <code>node_modules</code> 包配别名。<a href="https://classic.yarnpkg.com/en/docs/cli/add/#toc-yarn-add-alias" target="_blank" rel="noreferrer">Yarn</a> 和 <a href="https://pnpm.io/aliases/" target="_blank" rel="noreferrer">pnpm</a> 都支持通过 <code>npm:</code> 前缀配置别名。</p></div><h2 id="resolve-dedupe" tabindex="-1">resolve.dedupe <a class="header-anchor" href="#resolve-dedupe" aria-label="Permalink to “resolve.dedupe”">​</a></h2><ul><li><strong>类型：</strong> <code>string[]</code></li></ul><p>如果你在你的应用程序中有相同依赖的副本（比如 monorepos），请使用此选项强制 Vite 始终将列出的依赖项解析为同一副本（从项目根目录）。</p><div class="warning custom-block"><p class="custom-block-title">SSR + ESM</p><p>对于服务端渲染构建，配置项 <code>build.rollupOptions.output</code> 为 ESM 构建输出时去重过程将不工作。一个替代方案是先使用 CJS 构建输出，直到 ESM 在插件中有了更好的模块加载支持。</p></div>`,43)),s("h2",g,[i[0]||(i[0]=l("resolve.conditions ",-1)),n(h),i[1]||(i[1]=l()),i[2]||(i[2]=s("a",{class:"header-anchor",href:"#resolve-conditions","aria-label":"Permalink to “resolve.conditions”"},"​",-1))]),i[113]||(i[113]=e(`<ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认：</strong> <code>[&#39;module&#39;, &#39;browser&#39;, &#39;development|production&#39;]</code> (<code>defaultClientConditions</code>)</li></ul><p>解决程序包中 <a href="https://nodejs.org/api/packages.html#packages_conditional_exports" target="_blank" rel="noreferrer">情景导出</a> 时的其他允许条件。</p><p>一个带有情景导出的包可能在它的 <code>package.json</code> 中有以下 <code>exports</code> 字段：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;exports&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;import&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./index.esm.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;require&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./index.cjs.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在这里，<code>import</code> 和 <code>require</code> 被称为“情景”。情景可以嵌套，并且应该从最特定的到最不特定的指定。</p><p><code>development|production</code> 是一个特殊值，根据 <code>process.env.NODE_ENV</code> 的值替换为 <code>production</code> 或 <code>development</code> 。如果 <code>process.env.NODE_ENV === &#39;production&#39;</code>，则替换为 <code>production</code>，否则替换为 <code>development</code>。</p><p>请注意，如果符合要求，<code>import</code>，<code>require</code>，<code>default</code> 始终会被应用。</p>`,7)),s("h2",E,[i[3]||(i[3]=l("resolve.mainFields ",-1)),n(h),i[4]||(i[4]=l()),i[5]||(i[5]=s("a",{class:"header-anchor",href:"#resolve-mainfields","aria-label":"Permalink to “resolve.mainFields”"},"​",-1))]),i[114]||(i[114]=e(`<ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认：</strong> <code>[&#39;browser&#39;, &#39;module&#39;, &#39;jsnext:main&#39;, &#39;jsnext&#39;]</code> (<code>defaultClientMainFields</code>)</li></ul><p><code>package.json</code> 中，在解析包的入口点时尝试的字段列表。注意：这比从 <code>exports</code> 字段解析的情景导出优先级低：如果一个入口起点从 <code>exports</code> 成功解析，<code>resolve.mainFields</code> 将被忽略。</p><h2 id="resolve-extensions" tabindex="-1">resolve.extensions <a class="header-anchor" href="#resolve-extensions" aria-label="Permalink to “resolve.extensions”">​</a></h2><ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认：</strong> <code>[&#39;.mjs&#39;, &#39;.js&#39;, &#39;.mts&#39;, &#39;.ts&#39;, &#39;.jsx&#39;, &#39;.tsx&#39;, &#39;.json&#39;]</code></li></ul><p>导入时想要省略的扩展名列表。注意，<strong>不</strong> 建议忽略自定义导入类型的扩展名（例如：<code>.vue</code>），因为它会影响 IDE 和类型支持。</p><h2 id="resolve-preservesymlinks" tabindex="-1">resolve.preserveSymlinks <a class="header-anchor" href="#resolve-preservesymlinks" aria-label="Permalink to “resolve.preserveSymlinks”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>启用此选项会使 Vite 通过原始文件路径（即不跟随符号链接的路径）而不是真正的文件路径（即跟随符号链接后的路径）确定文件身份。</p><ul><li><strong>相关：</strong> <a href="https://esbuild.github.io/api/#preserve-symlinks" target="_blank" rel="noreferrer">esbuild#preserve-symlinks</a>，<a href="https://webpack.js.org/configuration/resolve/#resolvesymlinks" target="_blank" rel="noreferrer">webpack#resolve.symlinks </a></li></ul><h2 id="html-cspnonce" tabindex="-1">html.cspNonce <a class="header-anchor" href="#html-cspnonce" aria-label="Permalink to “html.cspNonce”">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>相关：</strong> <a href="/guide/features.html#content-security-policy-csp">内容安全策略（CSP）</a></li></ul><p>一个在生成脚本或样式标签时会用到的 nonce 值占位符。设置此值还会生成一个带有 nonce 值的 meta 标签。</p><h2 id="css-modules" tabindex="-1">css.modules <a class="header-anchor" href="#css-modules" aria-label="Permalink to “css.modules”">​</a></h2><ul><li><strong>类型：</strong><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CSSModulesOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  getJSON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    cssFileName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    outputFileName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  scopeBehaviour</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;global&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;local&#39;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  globalModulePaths</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegExp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  exportGlobals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  generateScopedName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">css</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  hashPrefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * default: undefined</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  localsConvention</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;camelCase&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;camelCaseOnly&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;dashes&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;dashesOnly&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        originalClassName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        generatedClassName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        inputFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><p>配置 CSS modules 的行为。选项将被传递给 <a href="https://github.com/css-modules/postcss-modules" target="_blank" rel="noreferrer">postcss-modules</a>。</p><p>当使用 <a href="./../guide/features.html#lightning-css">Lightning CSS</a> 时，该选项不会产生任何效果。如果要启用该选项，则应该使用 <a href="https://lightningcss.dev/css-modules.html" target="_blank" rel="noreferrer"><code>css.lightningcss.cssModules</code></a> 来替代。</p><h2 id="css-postcss" tabindex="-1">css.postcss <a class="header-anchor" href="#css-postcss" aria-label="Permalink to “css.postcss”">​</a></h2><ul><li><strong>类型：</strong> <code>string | (postcss.ProcessOptions &amp; { plugins?: postcss.AcceptedPlugin[] })</code></li></ul><p>内联的 PostCSS 配置（格式同 <code>postcss.config.js</code>），或者一个（默认基于项目根目录的）自定义的 PostCSS 配置路径。</p><p>对内联的 PostCSS 配置，它期望接收与 <code>postcss.config.js</code> 一致的格式。但对于 <code>plugins</code> 属性有些特别，只接收使用 <a href="https://github.com/postcss/postcss-load-config/blob/main/README.md#array" target="_blank" rel="noreferrer">数组格式</a>。</p><p>搜索是使用 <a href="https://github.com/postcss/postcss-load-config" target="_blank" rel="noreferrer">postcss-load-config</a> 完成的，只有被支持的文件名才会被加载。默认情况下，不会搜索工作区根目录（或 <a href="/guide/#index-html-and-project-root">项目根目录</a>，如果未找到工作区）之外的配置文件。如有必要，您可以指定根目录之外的自定义路径来加载特定的配置文件。</p><p>注意：如果提供了该内联配置，Vite 将不会搜索其他 PostCSS 配置源。</p><h2 id="css-preprocessoroptions" tabindex="-1">css.preprocessorOptions <a class="header-anchor" href="#css-preprocessoroptions" aria-label="Permalink to “css.preprocessorOptions”">​</a></h2><ul><li><strong>类型：</strong> <code>Record&lt;string, object&gt;</code></li></ul><p>指定传递给 CSS 预处理器的选项。文件扩展名用作选项的键。每个预处理器支持的选项可以在它们各自的文档中找到：</p><ul><li><code>sass</code>/<code>scss</code>:</li><li>如果已安装，则使用 <code>sass-embedded</code>，否则使用 <code>sass</code>。为了获得最佳性能，建议安装 <code>sass-embedded</code> 包。 <ul><li><a href="https://sass-lang.com/documentation/js-api/interfaces/stringoptions/" target="_blank" rel="noreferrer">Options</a></li></ul></li><li><code>less</code>: <a href="https://lesscss.org/usage/#less-options" target="_blank" rel="noreferrer">选项</a>.</li><li><code>styl</code>/<code>stylus</code>: 仅支持 <a href="https://stylus-lang.com/docs/js.html#define-name-node" target="_blank" rel="noreferrer"><code>define</code></a>，可以作为对象传递。</li></ul><p><strong>示例：</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  css: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    preprocessorOptions: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      less: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        math: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;parens-division&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      styl: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        define: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          $specialColor: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stylus.nodes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RGBA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">51</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">197</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      scss: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        importers: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="css-preprocessoroptions-extension-additionaldata" tabindex="-1">css.preprocessorOptions[extension].additionalData <a class="header-anchor" href="#css-preprocessoroptions-extension-additionaldata" aria-label="Permalink to “css.preprocessorOptions[extension].additionalData”">​</a></h3><ul><li><strong>类型：</strong> <code>string | ((source: string, filename: string) =&gt; (string | { content: string; map?: SourceMap }))</code></li></ul><p>该选项可以用来为每一段样式内容添加额外的代码。但是要注意，如果你添加的是实际的样式而不仅仅是变量，那这些样式在最终的产物中会重复。</p><p><strong>示例：</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  css: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    preprocessorOptions: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      scss: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        additionalData: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`$injectedColor: orange;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="css-preprocessormaxworkers" tabindex="-1">css.preprocessorMaxWorkers <a class="header-anchor" href="#css-preprocessormaxworkers" aria-label="Permalink to “css.preprocessorMaxWorkers”">​</a></h2><ul><li><strong>类型：</strong> <code>number | true</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>指定 CSS 预处理器可以使用的最大线程数。<code>true</code> 表示最多为 CPU 数量减 1。当设置为 <code>0</code> 时，Vite 将不会创建任何工作线程，而是在主线程中运行预处理器。</p><p>根据预处理器选项，即使此选项未设置为 <code>0</code>，Vite 也可能会在主线程上运行预处理器。</p><h2 id="css-devsourcemap" tabindex="-1">css.devSourcemap <a class="header-anchor" href="#css-devsourcemap" aria-label="Permalink to “css.devSourcemap”">​</a></h2><ul><li><strong>实验性：</strong> <a href="https://github.com/vitejs/vite/discussions/13845" target="_blank" rel="noreferrer">提供反馈</a></li><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>在开发过程中是否启用 sourcemap。</p><h2 id="css-transformer" tabindex="-1">css.transformer <a class="header-anchor" href="#css-transformer" aria-label="Permalink to “css.transformer”">​</a></h2><ul><li><strong>实验性：</strong> <a href="https://github.com/vitejs/vite/discussions/13835" target="_blank" rel="noreferrer">提供反馈</a></li><li><strong>类型：</strong> <code>&#39;postcss&#39; | &#39;lightningcss&#39;</code></li><li><strong>默认：</strong> <code>&#39;postcss&#39;</code></li></ul><p>该选项用于选择用于 CSS 处理的引擎。详细信息请查看 <a href="./../guide/features.html#lightning-css">Lightning CSS</a>。</p><div class="info custom-block"><p class="custom-block-title">重复的 <code>@import</code></p><p>需要注意的是，postcss（postcss-import）处理重复 <code>@import</code> 的行为与浏览器是不同的。详情请参考 <a href="https://github.com/postcss/postcss-import/issues/462" target="_blank" rel="noreferrer">postcss/postcss-import#462</a>。</p></div><h2 id="css-lightningcss" tabindex="-1">css.lightningcss <a class="header-anchor" href="#css-lightningcss" aria-label="Permalink to “css.lightningcss”">​</a></h2><ul><li><strong>实验性：</strong> <a href="https://github.com/vitejs/vite/discussions/13835" target="_blank" rel="noreferrer">提供反馈</a></li><li><strong>类型：</strong></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  CSSModulesConfig,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Drafts,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Features,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  NonStandard,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  PseudoClasses,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Targets,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lightningcss&#39;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  targets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Targets</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  include</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Features</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  exclude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Features</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  drafts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Drafts</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nonStandard</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NonStandard</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pseudoClasses</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PseudoClasses</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  unusedSymbols</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string[]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  cssModules</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CSSModulesConfig,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>该选项用于配置 Lightning CSS。有关完整的转换选项，请参阅 <a href="https://github.com/parcel-bundler/lightningcss/blob/master/node/index.d.ts" target="_blank" rel="noreferrer">Lightning CSS 仓库</a>。</p><h2 id="json-namedexports" tabindex="-1">json.namedExports <a class="header-anchor" href="#json-namedexports" aria-label="Permalink to “json.namedExports”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>是否支持从 <code>.json</code> 文件中进行按名导入。</p><h2 id="json-stringify" tabindex="-1">json.stringify <a class="header-anchor" href="#json-stringify" aria-label="Permalink to “json.stringify”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean | &#39;auto&#39;</code></li><li><strong>默认：</strong> <code>&#39;auto&#39;</code></li></ul><p>若设置为 <code>true</code>，导入的 JSON 会被转换为 <code>export default JSON.parse(&quot;...&quot;)</code>，这样会比转译成对象字面量性能更好，尤其是当 JSON 文件较大的时候。</p><p>如果设置为 <code>&#39;auto&#39;</code>，只有当 <a href="https://v8.dev/blog/cost-of-javascript-2019#json:~:text=A%20good%20rule%20of%20thumb%20is%20to%20apply%20this%20technique%20for%20objects%20of%2010%20kB%20or%20larger" target="_blank" rel="noreferrer">数据大于 10kB 时</a>，才会对数据进行字符串化处理。</p><h2 id="esbuild" tabindex="-1">esbuild <a class="header-anchor" href="#esbuild" aria-label="Permalink to “esbuild”">​</a></h2><ul><li><strong>类型：</strong> <code>ESBuildOptions | false</code></li></ul><p><code>ESBuildOptions</code> 继承自 <a href="https://esbuild.github.io/api/#transform" target="_blank" rel="noreferrer">esbuild 转换选项</a>。最常见的用例是自定义 JSX：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  esbuild: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    jsxFactory: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;h&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    jsxFragment: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Fragment&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>默认情况下，esbuild 会被应用在 <code>ts</code>、<code>jsx</code>、<code>tsx</code> 文件。你可以通过 <code>esbuild.include</code> 和 <code>esbuild.exclude</code> 对要处理的文件类型进行配置，这两个配置的值可以是一个正则表达式、一个 <a href="https://github.com/micromatch/picomatch#globbing-features" target="_blank" rel="noreferrer">picomatch</a> 模式，或是一个值为这两种类型的数组。</p><p>此外，你还可以通过 <code>esbuild.jsxInject</code> 来自动为每一个被 esbuild 转换的文件注入 JSX helper。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  esbuild: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    jsxInject: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`import React from &#39;react&#39;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>当 <a href="./build-options.html#build-minify"><code>build.minify</code></a> 为 <code>true</code> 时，所有最小化的优化过程都会被默认应用，要禁用它的 <a href="https://esbuild.github.io/api/#minify" target="_blank" rel="noreferrer">某些特定方面</a>，请设置 <code>esbuild.minifyIdentifiers</code>、<code>esbuild.minifySyntax</code> 或 <code>esbuild.minifyWhitespace</code> 三种选项其中任意一种为 <code>false</code>。注意 <code>esbuild.minify</code> 选项无法用于覆盖 <code>build.minify</code>。</p><p>设置为 <code>false</code> 来禁用 esbuild 转换。</p><h2 id="assetsinclude" tabindex="-1">assetsInclude <a class="header-anchor" href="#assetsinclude" aria-label="Permalink to “assetsInclude”">​</a></h2><ul><li><strong>类型：</strong> <code>string | RegExp | (string | RegExp)[]</code></li><li><strong>相关内容：</strong> <a href="/guide/assets.html">静态资源处理</a></li></ul><p>指定额外的 <a href="https://github.com/micromatch/picomatch#globbing-features" target="_blank" rel="noreferrer">picomatch 模式</a> 作为静态资源处理，因此：</p><ul><li><p>当从 HTML 引用它们或直接通过 <code>fetch</code> 或 XHR 请求它们时，它们将被插件转换管道排除在外。</p></li><li><p>从 JavaScript 导入它们将返回解析后的 URL 字符串（如果你设置了 <code>enforce: &#39;pre&#39;</code> 插件来处理不同的资产类型，这可能会被覆盖）。</p></li></ul><p>内建支持的资源类型列表可以在 <a href="https://github.com/vitejs/vite/blob/main/packages/vite/src/node/constants.ts" target="_blank" rel="noreferrer">这里</a> 找到。</p><p><strong>示例：</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  assetsInclude: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;**/*.gltf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="loglevel" tabindex="-1">logLevel <a class="header-anchor" href="#loglevel" aria-label="Permalink to “logLevel”">​</a></h2><ul><li><strong>类型：</strong> <code>&#39;info&#39; | &#39;warn&#39; | &#39;error&#39; | &#39;silent&#39;</code></li></ul><p>调整控制台输出的级别，默认为 <code>&#39;info&#39;</code>。</p><h2 id="customlogger" tabindex="-1">customLogger <a class="header-anchor" href="#customlogger" aria-label="Permalink to “customLogger”">​</a></h2><ul><li><strong>类型：</strong><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LogOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  warn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LogOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  warnOnce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LogOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LogErrorOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  clearScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LogType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  hasErrorLogged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RollupError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  hasWarned</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><p>使用自定义 logger 记录消息。可以使用 Vite 的 <code>createLogger</code> API 获取默认的 logger 并对其进行自定义，例如，更改消息或过滤掉某些警告。</p>`,78)),s("div",c,[i[110]||(i[110]=s("button",{title:"Copy Code",class:"copy"},null,-1)),i[111]||(i[111]=s("span",{class:"lang"},"ts",-1)),s("pre",y,[s("code",null,[s("span",u,[i[10]||(i[10]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import",-1)),i[11]||(i[11]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { ",-1)),s("span",F,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[6]||(i[6]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," createLogger"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"level"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LogLevel"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LoggerOptions"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Logger")])],-1)])]),default:a(()=>[i[7]||(i[7]=s("span",null,"createLogger",-1))]),_:1})]),i[12]||(i[12]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", ",-1)),s("span",f,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[8]||(i[8]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," defineConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"config"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," UserConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," UserConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (+"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"5"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," overloads"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,`Type helper to make it easier to use vite.config.ts
accepts a direct`),l(`
`),s("p",null,"UserConfig"),l(`
`),s("p",null,`object, or a function that returns it.
The function receives a`),l(`
`),s("p",null,"ConfigEnv"),l(`
`),s("p",null,"object.")])],-1)])]),default:a(()=>[i[9]||(i[9]=s("span",null,"defineConfig",-1))]),_:1})]),i[13]||(i[13]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," } ",-1)),i[14]||(i[14]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from",-1)),i[15]||(i[15]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'vite'",-1))]),i[91]||(i[91]=l(`
`,-1)),i[92]||(i[92]=s("span",{class:"line"},null,-1)),i[93]||(i[93]=l(`
`,-1)),s("span",m,[i[20]||(i[20]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const",-1)),i[21]||(i[21]=s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," ",-1)),s("span",C,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[16]||(i[16]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," logger"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Logger")])],-1)])]),default:a(()=>[i[17]||(i[17]=s("span",null,"logger",-1))]),_:1})]),i[22]||(i[22]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," =",-1)),i[23]||(i[23]=s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," ",-1)),s("span",b,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[18]||(i[18]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," createLogger"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"level"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LogLevel"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LoggerOptions"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Logger")])],-1)])]),default:a(()=>[i[19]||(i[19]=s("span",null,"createLogger",-1))]),_:1})]),i[24]||(i[24]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()",-1))]),i[94]||(i[94]=l(`
`,-1)),s("span",v,[i[31]||(i[31]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const",-1)),i[32]||(i[32]=s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," ",-1)),s("span",A,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[25]||(i[25]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," loggerWarn"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"msg"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LogOptions"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=>"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," void")])],-1)])]),default:a(()=>[i[26]||(i[26]=s("span",null,"loggerWarn",-1))]),_:1})]),i[33]||(i[33]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," =",-1)),i[34]||(i[34]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ",-1)),s("span",B,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[27]||(i[27]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," logger"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Logger")])],-1)])]),default:a(()=>[i[28]||(i[28]=s("span",null,"logger",-1))]),_:1})]),i[35]||(i[35]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".",-1)),s("span",D,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[29]||(i[29]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Logger."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"warn"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(msg: string, options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," LogOptions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"): "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"void")])],-1)])]),default:a(()=>[i[30]||(i[30]=s("span",null,"warn",-1))]),_:1})])]),i[95]||(i[95]=l(`
`,-1)),i[96]||(i[96]=s("span",{class:"line"},null,-1)),i[97]||(i[97]=l(`
`,-1)),s("span",w,[s("span",x,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[36]||(i[36]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," logger"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Logger")])],-1)])]),default:a(()=>[i[37]||(i[37]=s("span",null,"logger",-1))]),_:1})]),i[44]||(i[44]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".",-1)),s("span",S,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[38]||(i[38]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Logger."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"warn"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(msg: string, options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," LogOptions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"): "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"void")])],-1)])]),default:a(()=>[i[39]||(i[39]=s("span",null,"warn",-1))]),_:1})]),i[45]||(i[45]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," =",-1)),i[46]||(i[46]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (",-1)),s("span",P,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[40]||(i[40]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"msg"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": string")])],-1)])]),default:a(()=>[i[41]||(i[41]=s("span",null,"msg",-1))]),_:1})]),i[47]||(i[47]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", ",-1)),s("span",j,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[42]||(i[42]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"options"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": LogOptions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])]),default:a(()=>[i[43]||(i[43]=s("span",null,"options",-1))]),_:1})]),i[48]||(i[48]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") ",-1)),i[49]||(i[49]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=>",-1)),i[50]||(i[50]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {",-1))]),i[98]||(i[98]=l(`
`,-1)),i[99]||(i[99]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // 忽略空 CSS 文件的警告")],-1)),i[100]||(i[100]=l(`
`,-1)),s("span",L,[i[59]||(i[59]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  if",-1)),i[60]||(i[60]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (",-1)),s("span",T,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[51]||(i[51]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"msg"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": string")])],-1)])]),default:a(()=>[i[52]||(i[52]=s("span",null,"msg",-1))]),_:1})]),i[61]||(i[61]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".",-1)),s("span",O,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[53]||(i[53]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"String."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"includes"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(searchString: string, position"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," number "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"): boolean")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,`Returns true if searchString appears as a substring of the result of converting this
object to a String, at one or more positions that are
greater than or equal to position; otherwise, returns false.`)]),s("div",{class:"twoslash-popup-docs twoslash-popup-docs-tags vp-doc"},[s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@param"),s("span",{class:"twoslash-popup-docs-tag-value"},[s("code",null,"searchString"),l("  search string")])]),s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@param"),s("span",{class:"twoslash-popup-docs-tag-value"},[s("code",null,"position"),l("  If position is undefined, 0 is assumed, so as to search all of the String.")])])])],-1)])]),default:a(()=>[i[54]||(i[54]=s("span",null,"includes",-1))]),_:1})]),i[62]||(i[62]=e('<span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vite:css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span>',5)),s("span",N,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[55]||(i[55]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"msg"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": string")])],-1)])]),default:a(()=>[i[56]||(i[56]=s("span",null,"msg",-1))]),_:1})]),i[63]||(i[63]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".",-1)),s("span",R,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[57]||(i[57]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"String."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"includes"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(searchString: string, position"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," number "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"): boolean")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,`Returns true if searchString appears as a substring of the result of converting this
object to a String, at one or more positions that are
greater than or equal to position; otherwise, returns false.`)]),s("div",{class:"twoslash-popup-docs twoslash-popup-docs-tags vp-doc"},[s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@param"),s("span",{class:"twoslash-popup-docs-tag-value"},[s("code",null,"searchString"),l("  search string")])]),s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@param"),s("span",{class:"twoslash-popup-docs-tag-value"},[s("code",null,"position"),l("  If position is undefined, 0 is assumed, so as to search all of the String.")])])])],-1)])]),default:a(()=>[i[58]||(i[58]=s("span",null,"includes",-1))]),_:1})]),i[64]||(i[64]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(",-1)),i[65]||(i[65]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"' is empty'",-1)),i[66]||(i[66]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")) ",-1)),i[67]||(i[67]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"return",-1))]),i[101]||(i[101]=l(`
`,-1)),s("span",V,[i[74]||(i[74]=s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"  ",-1)),s("span",I,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[68]||(i[68]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," loggerWarn"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"msg"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LogOptions"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=>"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," void")])],-1)])]),default:a(()=>[i[69]||(i[69]=s("span",null,"loggerWarn",-1))]),_:1})]),i[75]||(i[75]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(",-1)),s("span",q,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[70]||(i[70]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"msg"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": string")])],-1)])]),default:a(()=>[i[71]||(i[71]=s("span",null,"msg",-1))]),_:1})]),i[76]||(i[76]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", ",-1)),s("span",M,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[72]||(i[72]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"options"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": LogOptions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])]),default:a(()=>[i[73]||(i[73]=s("span",null,"options",-1))]),_:1})]),i[77]||(i[77]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")",-1))]),i[102]||(i[102]=l(`
`,-1)),i[103]||(i[103]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")],-1)),i[104]||(i[104]=l(`
`,-1)),i[105]||(i[105]=s("span",{class:"line"},null,-1)),i[106]||(i[106]=l(`
`,-1)),s("span",J,[i[80]||(i[80]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export",-1)),i[81]||(i[81]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," default",-1)),i[82]||(i[82]=s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," ",-1)),s("span",U,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[78]||(i[78]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," defineConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"config"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," UserConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," UserConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (+"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"5"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," overloads"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,`Type helper to make it easier to use vite.config.ts
accepts a direct`),l(`
`),s("p",null,"UserConfig"),l(`
`),s("p",null,`object, or a function that returns it.
The function receives a`),l(`
`),s("p",null,"ConfigEnv"),l(`
`),s("p",null,"object.")])],-1)])]),default:a(()=>[i[79]||(i[79]=s("span",null,"defineConfig",-1))]),_:1})]),i[83]||(i[83]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({",-1))]),i[107]||(i[107]=l(`
`,-1)),s("span",W,[i[88]||(i[88]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ",-1)),s("span",H,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[84]||(i[84]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"UserConfig.customLogger"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Logger "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"Custom logger.")])],-1)])]),default:a(()=>[i[85]||(i[85]=s("span",null,"customLogger",-1))]),_:1})]),i[89]||(i[89]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),s("span",$,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:a(({})=>[...i[86]||(i[86]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," logger"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Logger")])],-1)])]),default:a(()=>[i[87]||(i[87]=s("span",null,"logger",-1))]),_:1})]),i[90]||(i[90]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[108]||(i[108]=l(`
`,-1)),i[109]||(i[109]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")],-1))])])]),i[115]||(i[115]=e(`<h2 id="clearscreen" tabindex="-1">clearScreen <a class="header-anchor" href="#clearscreen" aria-label="Permalink to “clearScreen”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>设为 <code>false</code> 可以避免 Vite 清屏而错过在终端中打印某些关键信息。命令行模式下可以通过 <code>--clearScreen false</code> 设置。</p><h2 id="envdir" tabindex="-1">envDir <a class="header-anchor" href="#envdir" aria-label="Permalink to “envDir”">​</a></h2><ul><li><strong>类型：</strong> <code>string | false</code></li><li><strong>默认：</strong> <code>root</code></li></ul><p>用于加载 <code>.env</code> 文件的目录。可以是一个绝对路径，也可以是相对于项目根的路径。设置为 <code>false</code> 将禁用 <code>.env</code> 文件的加载。</p><p>关于环境文件的更多信息，请参见 <a href="/guide/env-and-mode.html#env-files">这里</a>。</p><h2 id="envprefix" tabindex="-1">envPrefix <a class="header-anchor" href="#envprefix" aria-label="Permalink to “envPrefix”">​</a></h2><ul><li><strong>类型：</strong> <code>string | string[]</code></li><li><strong>默认：</strong> <code>VITE_</code></li></ul><p>以 <code>envPrefix</code> 开头的环境变量会通过 <code>import.meta.env</code> 暴露在你的客户端源码中。</p><div class="warning custom-block"><p class="custom-block-title">安全注意事项</p><p><code>envPrefix</code> 不应被设置为空字符串 <code>&#39;&#39;</code>，这将暴露你所有的环境变量，导致敏感信息的意外泄漏。 检测到配置为 <code>&#39;&#39;</code> 时 Vite 将会抛出错误.</p><p>如果你想暴露一个不含前缀的变量，可以使用 <a href="#define">define</a> 选项：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;import.meta.env.ENV_VARIABLE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ENV_VARIABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><h2 id="apptype" tabindex="-1">appType <a class="header-anchor" href="#apptype" aria-label="Permalink to “appType”">​</a></h2><ul><li><strong>类型：</strong> <code>&#39;spa&#39; | &#39;mpa&#39; | &#39;custom&#39;</code></li><li><strong>默认：</strong> <code>&#39;spa&#39;</code></li></ul><p>无论你的应用是一个单页应用（SPA）还是一个 <a href="./../guide/build.html#multi-page-app">多页应用（MPA）</a>，亦或是一个定制化应用（SSR 和自定义 HTML 处理的框架）：</p><ul><li><code>&#39;spa&#39;</code>：包含 HTML 中间件以及使用 SPA 回退。在预览中将 <a href="https://github.com/lukeed/sirv" target="_blank" rel="noreferrer">sirv</a> 配置为 <code>single: true</code></li><li><code>&#39;mpa&#39;</code>：包含 HTML 中间件</li><li><code>&#39;custom&#39;</code>：不包含 HTML 中间件</li></ul><p>要了解更多，请查看 Vite 的 <a href="/guide/ssr.html#vite-cli">SSR 指引</a>。相关内容：<a href="./server-options.html#server-middlewaremode"><code>server.middlewareMode</code></a>。</p><h2 id="future" tabindex="-1">future <a class="header-anchor" href="#future" aria-label="Permalink to “future”">​</a></h2><ul><li><strong>类型：</strong> <code>Record&lt;string, &#39;warn&#39; | undefined&gt;</code></li><li><strong>默认：</strong> <a href="/changes/">破坏性变更</a></li></ul><p>启用未来的重大变更，为顺利迁移到 Vite 的下一个主要版本做好准备。随着新功能的开发，这个列表可能会随时进行更新、添加或移除。</p><p>请查看 <a href="/changes/">破坏性变更</a> 页面，了解可能的选项详情。</p>`,20))])}const ss=k(d,[["render",X]]);export{_ as __pageData,ss as default};
