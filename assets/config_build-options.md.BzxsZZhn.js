import{_ as n,I as r,c as p,o as d,aq as o,j as s,a as e,J as a,w as l}from"./chunks/framework.CYFbgU53.js";const _=JSON.parse('{"title":"构建选项","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.zhcndoc.com/config/build-options"}],["meta",{"property":"og:title","content":"构建选项"}]]},"headers":[],"relativePath":"config/build-options.md","filePath":"config/build-options.md"}'),h={name:"config/build-options.md"},k={class:"language-js"},g={class:"shiki shiki-themes github-light github-dark twoslash lsp",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},u={class:"line"},c={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},E={class:"line"},y={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},b={style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},f={style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},m={style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},F={style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},v={class:"line"},w={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},C={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},A={class:"vp-code-block-title"},B={class:"language-js"},D={class:"shiki shiki-themes github-light github-dark twoslash lsp",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},S={class:"line"},P={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},T={class:"line"},x={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},j={class:"line"},O={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},R={class:"line"},N={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},I={class:"line"},V={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},M={class:"line"},L={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},z={style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},U={style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},W={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},J={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},$={class:"line"},q={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}};function G(H,i,K,Q,X,Y){const t=r("v-menu");return d(),p("div",null,[i[100]||(i[100]=o(`<h1 id="build-options" tabindex="-1">构建选项 <a class="header-anchor" href="#build-options" aria-label="Permalink to “构建选项”">​</a></h1><p>除非另有说明，本节中的选项仅适用于构建。</p><h2 id="build-target" tabindex="-1">build.target <a class="header-anchor" href="#build-target" aria-label="Permalink to “build.target”">​</a></h2><ul><li><strong>类型：</strong> <code>string | string[]</code></li><li><strong>默认：</strong> <code>&#39;baseline-widely-available&#39;</code></li><li><strong>相关内容：</strong> <a href="/guide/build.html#browser-compatibility">浏览器兼容性</a></li></ul><p>最终软件包的浏览器兼容性目标。默认值是 Vite 的一个特殊值 <code>&#39;baseline-widely-available&#39;</code>，该值针对的是包含在 2025 年 5 月 1 日广泛可用的 <a href="https://web-platform-dx.github.io/web-features/" target="_blank" rel="noreferrer">Baseline</a> 中的浏览器。具体来说，它是 <code>[&#39;chrome107&#39;, &#39;edge107&#39;, &#39;firefox104&#39;, &#39;safari16&#39;]</code>。</p><p>另一个特殊值是 <code>&#39;esnext&#39;</code> —— 即假设有原生动态导入支持，并只执行最低限度的转译。</p><p>转换过程将会由 esbuild 执行，并且此值应该是一个合法的 <a href="https://esbuild.github.io/api/#target" target="_blank" rel="noreferrer">esbuild 目标选项</a>。自定义目标也可以是一个 ES 版本（例如：<code>es2015</code>）、一个浏览器版本（例如：<code>chrome58</code>）或是多个目标组成的一个数组。</p><p>注意：如果代码包含不能被 <code>esbuild</code> 安全地编译的特性，那么构建将会失败。查看 <a href="https://esbuild.github.io/content-types/#javascript" target="_blank" rel="noreferrer">esbuild 文档</a> 获取更多细节。</p><h2 id="build-modulepreload" tabindex="-1">build.modulePreload <a class="header-anchor" href="#build-modulepreload" aria-label="Permalink to “build.modulePreload”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean | { polyfill?: boolean, resolveDependencies?: ResolveModulePreloadDependenciesFn }</code></li><li><strong>默认值：</strong> <code>{ polyfill: true }</code></li></ul><p>默认情况下，一个 <a href="https://guybedford.com/es-module-preloading-integrity#modulepreload-polyfill" target="_blank" rel="noreferrer">模块预加载 polyfill</a> 会被自动注入。该 polyfill 会自动注入到每个 <code>index.html</code> 入口的的代理模块中。如果构建通过 <code>build.rollupOptions.input</code> 被配置为了使用非 HTML 入口的形式，那么必须要在你的自定义入口中手动引入该 polyfill：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite/modulepreload-polyfill&#39;</span></span></code></pre></div><p>注意：此 polyfill <strong>不适用于</strong> <a href="/guide/build.html#library-mode">Library 模式</a>。如果你需要支持不支持动态引入的浏览器，你应该避免在你的库中使用此选项。</p><p>此 polyfill 可以通过 <code>{ polyfill: false }</code> 来禁用。</p><p>每个动态导入要预加载的块列表将由 Vite 计算。默认情况下，在载入这些依赖时，会使用一个包含 <code>base</code> 的绝对路径。如果 <code>base</code> 是相对路径（<code>&#39;&#39;</code> 或者 <code>&#39;./&#39;</code>），解析时则会使用 <code>import.meta.url</code>，以避免出现依赖于最终部署基路径的绝对路径。</p><p>目前有一个实验性功能支持使用 <code>resolveDependencies</code> 函数对依赖项列表及其路径进行细粒度控制。可以在这里 <a href="https://github.com/vitejs/vite/discussions/13841" target="_blank" rel="noreferrer">提供反馈</a>。它期望接收一个 <code>ResolveModulePreloadDependenciesFn</code> 类型的函数:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResolveModulePreloadDependenciesFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  deps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[],</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    hostId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    hostType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;html&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span></span></code></pre></div><p><code>resolveDependencies</code> 函数会在每次动态导入时被调用，并包含其依赖的 chunk 列表。同时，它也会在入口 HTML 文件中导入每个 chunk 时被调用。你可以返回一个新的依赖数组，其中可以过滤掉或注入更多的依赖，或修改它们的路径。<code>deps</code> 路径是相对于 <code>build.outDir</code> 的。返回值应是对于 <code>build.outDir</code> 的相对路径。</p>`,18)),s("div",k,[i[34]||(i[34]=s("button",{title:"Copy Code",class:"copy"},null,-1)),i[35]||(i[35]=s("span",{class:"lang"},"js",-1)),s("pre",g,[s("code",null,[s("span",u,[s("span",c,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[0]||(i[0]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"BuildEnvironmentOptions.modulePreload"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," boolean "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ModulePreloadOptions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,`Configure module preload
Note: does not apply to library mode.`)]),s("div",{class:"twoslash-popup-docs twoslash-popup-docs-tags vp-doc"},[s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@default"),s("span",{class:"twoslash-popup-docs-tag-value"},"true")])])],-1)])]),default:l(()=>[i[1]||(i[1]=s("span",null,"modulePreload",-1))]),_:1})]),i[2]||(i[2]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {",-1))]),i[31]||(i[31]=e(`
`,-1)),s("span",E,[i[13]||(i[13]=s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"  ",-1)),s("span",y,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[3]||(i[3]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"ModulePreloadOptions.resolveDependencies"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ResolveModulePreloadDependenciesFn "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"Resolve the list of dependencies to preload for a given dynamic import")]),s("div",{class:"twoslash-popup-docs twoslash-popup-docs-tags vp-doc"},[s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@experimental")])])],-1)])]),default:l(()=>[i[4]||(i[4]=s("span",null,"resolveDependencies",-1))]),_:1})]),i[14]||(i[14]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": (",-1)),s("span",b,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[5]||(i[5]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"filename"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": string")])],-1)])]),default:l(()=>[i[6]||(i[6]=s("span",null,"filename",-1))]),_:1})]),i[15]||(i[15]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", ",-1)),s("span",f,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[7]||(i[7]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"deps"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": string[]")])],-1)])]),default:l(()=>[i[8]||(i[8]=s("span",null,"deps",-1))]),_:1})]),i[16]||(i[16]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", { ",-1)),s("span",m,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[9]||(i[9]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"hostId"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": string")])],-1)])]),default:l(()=>[i[10]||(i[10]=s("span",null,"hostId",-1))]),_:1})]),i[17]||(i[17]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", ",-1)),s("span",F,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[11]||(i[11]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"hostType"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"html"'),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "js"')])],-1)])]),default:l(()=>[i[12]||(i[12]=s("span",null,"hostType",-1))]),_:1})]),i[18]||(i[18]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," }) ",-1)),i[19]||(i[19]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=>",-1)),i[20]||(i[20]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {",-1))]),i[32]||(i[32]=e(`
`,-1)),s("span",v,[i[25]||(i[25]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    return",-1)),i[26]||(i[26]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ",-1)),s("span",w,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[21]||(i[21]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"deps"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": string[]")])],-1)])]),default:l(()=>[i[22]||(i[22]=s("span",null,"deps",-1))]),_:1})]),i[27]||(i[27]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".",-1)),s("span",C,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[23]||(i[23]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Array"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"string"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"filter"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">(predicate: ("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"value"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"index"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," number"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"array"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[]) "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=>"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," value is string, thisArg"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," any): string[] ("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," overload)")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"Returns the elements of an array that meet the condition specified in a callback function.")]),s("div",{class:"twoslash-popup-docs twoslash-popup-docs-tags vp-doc"},[s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@param"),s("span",{class:"twoslash-popup-docs-tag-value"},[s("code",null,"predicate"),e("  A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.")])]),s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@param"),s("span",{class:"twoslash-popup-docs-tag-value"},[s("code",null,"thisArg"),e("  An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.")])])])],-1)])]),default:l(()=>[i[24]||(i[24]=s("span",null,"filter",-1))]),_:1})]),i[28]||(i[28]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(",-1)),i[29]||(i[29]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"condition",-1)),i[30]||(i[30]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")",-1))]),i[33]||(i[33]=o(`
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"></span>`,6))])])]),i[101]||(i[101]=o('<p>解析得到的依赖路径可以再在之后使用 <a href="./../guide/build.html#advanced-base-options"><code>experimental.renderBuiltUrl</code></a> 更改。</p><h2 id="build-polyfillmodulepreload" tabindex="-1">build.polyfillModulePreload <a class="header-anchor" href="#build-polyfillmodulepreload" aria-label="Permalink to “build.polyfillModulePreload”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li><li><strong>已废弃</strong> 请使用 <code>build.modulePreload.polyfill</code> 替代</li></ul><p>是否自动注入一个 <a href="https://guybedford.com/es-module-preloading-integrity#modulepreload-polyfill" target="_blank" rel="noreferrer">模块预加载 polyfill</a>。</p><h2 id="build-outdir" tabindex="-1">build.outDir <a class="header-anchor" href="#build-outdir" aria-label="Permalink to “build.outDir”">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>dist</code></li></ul><p>指定输出路径（相对于 <a href="/guide/#index-html-and-project-root">项目根目录</a>).</p><h2 id="build-assetsdir" tabindex="-1">build.assetsDir <a class="header-anchor" href="#build-assetsdir" aria-label="Permalink to “build.assetsDir”">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>assets</code></li></ul><p>指定生成静态资源的存放路径（相对于 <code>build.outDir</code>）。在 <a href="/guide/build.html#library-mode">库模式</a> 下不能使用。</p><h2 id="build-assetsinlinelimit" tabindex="-1">build.assetsInlineLimit <a class="header-anchor" href="#build-assetsinlinelimit" aria-label="Permalink to “build.assetsInlineLimit”">​</a></h2><ul><li><strong>类型：</strong> <code>number</code> | <code>((filePath: string, content: Buffer) =&gt; boolean | undefined)</code></li><li><strong>默认：</strong> <code>4096</code> (4 KiB)</li></ul><p>小于此阈值的导入或引用资源将内联为 base64 编码，以避免额外的 http 请求。设置为 <code>0</code> 可以完全禁用此项。</p><p>如果传入了一个回调函数，可以通过返回一个布尔值来选择是否加入。如果没有返回任何内容，那么就会应用默认的逻辑。</p><p>Git LFS 占位符会自动排除在内联之外，因为它们不包含其所表示的文件的内容。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>如果你指定了 <code>build.lib</code>，那么 <code>build.assetsInlineLimit</code> 将被忽略，无论文件大小或是否为 Git LFS 占位符，资源都会被内联。</p></div><h2 id="build-csscodesplit" tabindex="-1">build.cssCodeSplit <a class="header-anchor" href="#build-csscodesplit" aria-label="Permalink to “build.cssCodeSplit”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>启用/禁用 CSS 代码拆分。当启用时，在异步 chunk 中导入的 CSS 将内联到异步 chunk 本身，并在其被加载时一并获取。</p><p>如果禁用，整个项目中的所有 CSS 将被提取到一个 CSS 文件中。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>如果指定了 <code>build.lib</code>，<code>build.cssCodeSplit</code> 会默认为 <code>false</code>。</p></div><h2 id="build-csstarget" tabindex="-1">build.cssTarget <a class="header-anchor" href="#build-csstarget" aria-label="Permalink to “build.cssTarget”">​</a></h2><ul><li><strong>类型：</strong> <code>string | string[]</code></li><li><strong>默认值：</strong> 与 <a href="#build-target"><code>build.target</code></a> 一致</li></ul><p>此选项允许用户为 CSS 的压缩设置一个不同的浏览器 target，此处的 target 并非是用于 JavaScript 转写目标。</p><p>应只在针对非主流浏览器时使用。 最直观的示例是当你要兼容的场景是安卓微信中的 webview 时，它支持大多数现代的 JavaScript 功能，但并不支持 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb_colors" target="_blank" rel="noreferrer">CSS 中的 <code>#RGBA</code> 十六进制颜色符号</a>。 这种情况下，你需要将 <code>build.cssTarget</code> 设置为 <code>chrome61</code>，以防止 vite 将 <code>rgba()</code> 颜色转化为 <code>#RGBA</code> 十六进制符号的形式。</p><h2 id="build-cssminify" tabindex="-1">build.cssMinify <a class="header-anchor" href="#build-cssminify" aria-label="Permalink to “build.cssMinify”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean | &#39;esbuild&#39; | &#39;lightningcss&#39;</code></li><li><strong>默认：</strong> 对于客户端，与 <a href="#build-minify"><code>build.minify</code></a> 相同；对于 SSR，为 <code>&#39;esbuild&#39;</code></li></ul><p>此选项允许用户覆盖 CSS 最小化压缩的配置，而不是使用默认的 <code>build.minify</code>，这样你就可以单独配置 JS 和 CSS 的最小化压缩方式。Vite 默认使用 <code>esbuild</code> 来最小化 CSS。将此选项设置为 <code>&#39;lightningcss&#39;</code> 可以改用 <a href="https://lightningcss.dev/minification.html" target="_blank" rel="noreferrer">Lightning CSS</a> 进行压缩。设置为该项，便可以使用 <a href="./shared-options.html#css-lightningcss"><code>css.lightningcss</code></a> 选项来进行配置。</p><h2 id="build-sourcemap" tabindex="-1">build.sourcemap <a class="header-anchor" href="#build-sourcemap" aria-label="Permalink to “build.sourcemap”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean | &#39;inline&#39; | &#39;hidden&#39;</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>构建后是否生成 source map 文件。如果为 <code>true</code>，将会创建一个独立的 source map 文件。如果为 <code>&#39;inline&#39;</code>，source map 将作为一个 data URI 附加在输出文件中。<code>&#39;hidden&#39;</code> 的工作原理与 <code>true</code> 相似，只是 bundle 文件中相应的注释将不被保留。</p><h2 id="build-rollupoptions" tabindex="-1">build.rollupOptions <a class="header-anchor" href="#build-rollupoptions" aria-label="Permalink to “build.rollupOptions”">​</a></h2><ul><li><strong>类型：</strong> <a href="https://cn.rollupjs.org/configuration-options/" target="_blank" rel="noreferrer"><code>RollupOptions</code></a></li></ul><p>自定义底层的 Rollup 打包配置。这与从 Rollup 配置文件导出的选项相同，并将与 Vite 的内部 Rollup 选项合并。查看 <a href="https://cn.rollupjs.org/configuration-options/" target="_blank" rel="noreferrer">Rollup 选项文档</a> 获取更多细节。</p><h2 id="build-commonjsoptions" tabindex="-1">build.commonjsOptions <a class="header-anchor" href="#build-commonjsoptions" aria-label="Permalink to “build.commonjsOptions”">​</a></h2><ul><li><strong>类型：</strong> <a href="https://github.com/rollup/plugins/tree/master/packages/commonjs#options" target="_blank" rel="noreferrer"><code>RollupCommonJSOptions</code></a></li></ul><p>传递给 <a href="https://github.com/rollup/plugins/tree/master/packages/commonjs" target="_blank" rel="noreferrer">@rollup/plugin-commonjs</a> 插件的选项。</p><h2 id="build-dynamicimportvarsoptions" tabindex="-1">build.dynamicImportVarsOptions <a class="header-anchor" href="#build-dynamicimportvarsoptions" aria-label="Permalink to “build.dynamicImportVarsOptions”">​</a></h2><ul><li><strong>类型：</strong> <a href="https://github.com/rollup/plugins/tree/master/packages/dynamic-import-vars#options" target="_blank" rel="noreferrer"><code>RollupDynamicImportVarsOptions</code></a></li><li><strong>相关内容：</strong> <a href="/guide/features.html#dynamic-import">动态导入</a></li></ul><p>传递给 <a href="https://github.com/rollup/plugins/tree/master/packages/dynamic-import-vars" target="_blank" rel="noreferrer">@rollup/plugin-dynamic-import-vars</a> 的选项。</p><h2 id="build-lib" tabindex="-1">build.lib <a class="header-anchor" href="#build-lib" aria-label="Permalink to “build.lib”">​</a></h2><ul><li><strong>类型：</strong> <code>{ entry: string | string[] | { [entryAlias: string]: string }, name?: string, formats?: (&#39;es&#39; | &#39;cjs&#39; | &#39;umd&#39; | &#39;iife&#39;)[], fileName?: string | ((format: ModuleFormat, entryName: string) =&gt; string), cssFileName?: string }</code></li><li><strong>相关内容：</strong> <a href="/guide/build.html#library-mode">库模式</a></li></ul><p>以库的形式构建。<code>entry</code> 是必需的，因为库不能使用 HTML 作为入口。<code>name</code> 是暴露的全局变量，当 <code>formats</code> 包括 <code>&#39;umd&#39;</code> 或 <code>&#39;iife&#39;</code> 时必须使用。默认的 <code>formats</code> 为 <code>[&#39;es&#39;、&#39;umd&#39;]</code>，如果使用多个入口，则为 <code>[&#39;es&#39;、&#39;cjs&#39;]</code>。</p><p><code>fileName</code> 是软件包输出文件的名称，默认为 <code>package.json</code> 中的 <code>&quot;name&quot;</code>。它也可以定义为以 <code>format</code> 和 <code>entryName</code> 为参数的函数，并返回文件名。</p><p>如果软件包导入了 CSS，<code>cssFileName</code> 可用于指定 CSS 输出文件的名称。如果设置为字符串，则默认值与 <code>fileName</code> 相同，否则也会返回到 <code>package.json</code> 中的 <code>&quot;name&quot;</code>。</p>',45)),s("div",A,[i[99]||(i[99]=s("div",{class:"vp-code-block-title-bar"},[s("span",{class:"vp-code-block-title-text","data-title":"vite.config.js"},"vite.config.js")],-1)),s("div",B,[i[97]||(i[97]=s("button",{title:"Copy Code",class:"copy"},null,-1)),i[98]||(i[98]=s("span",{class:"lang"},"js",-1)),s("pre",D,[s("code",null,[s("span",S,[i[38]||(i[38]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import",-1)),i[39]||(i[39]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { ",-1)),s("span",P,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[36]||(i[36]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," defineConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"config"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," UserConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," UserConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (+"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"5"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," overloads"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,`Type helper to make it easier to use vite.config.ts
accepts a direct`),e(`
`),s("p",null,"UserConfig"),e(`
`),s("p",null,`object, or a function that returns it.
The function receives a`),e(`
`),s("p",null,"ConfigEnv"),e(`
`),s("p",null,"object.")])],-1)])]),default:l(()=>[i[37]||(i[37]=s("span",null,"defineConfig",-1))]),_:1})]),i[40]||(i[40]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," } ",-1)),i[41]||(i[41]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from",-1)),i[42]||(i[42]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'vite'",-1))]),i[88]||(i[88]=e(`
`,-1)),i[89]||(i[89]=s("span",{class:"line"},null,-1)),i[90]||(i[90]=e(`
`,-1)),s("span",T,[i[45]||(i[45]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export",-1)),i[46]||(i[46]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," default",-1)),i[47]||(i[47]=s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," ",-1)),s("span",x,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[43]||(i[43]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," defineConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"config"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," UserConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," UserConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (+"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"5"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," overloads"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,`Type helper to make it easier to use vite.config.ts
accepts a direct`),e(`
`),s("p",null,"UserConfig"),e(`
`),s("p",null,`object, or a function that returns it.
The function receives a`),e(`
`),s("p",null,"ConfigEnv"),e(`
`),s("p",null,"object.")])],-1)])]),default:l(()=>[i[44]||(i[44]=s("span",null,"defineConfig",-1))]),_:1})]),i[48]||(i[48]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({",-1))]),i[91]||(i[91]=e(`
`,-1)),s("span",j,[i[51]||(i[51]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ",-1)),s("span",O,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[49]||(i[49]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"build"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," BuildEnvironmentOptions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"Build specific options")])],-1)])]),default:l(()=>[i[50]||(i[50]=s("span",null,"build",-1))]),_:1})]),i[52]||(i[52]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {",-1))]),i[92]||(i[92]=e(`
`,-1)),s("span",R,[i[55]||(i[55]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ",-1)),s("span",N,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[53]||(i[53]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"BuildEnvironmentOptions.lib"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," false"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," LibraryOptions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,`Build in library mode. The value should be the global name of the lib in
UMD mode. This will produce esm + cjs + umd bundle formats with default
configurations that are suitable for distributing libraries.`)]),s("div",{class:"twoslash-popup-docs twoslash-popup-docs-tags vp-doc"},[s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@default"),s("span",{class:"twoslash-popup-docs-tag-value"},"false")])])],-1)])]),default:l(()=>[i[54]||(i[54]=s("span",null,"lib",-1))]),_:1})]),i[56]||(i[56]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {",-1))]),i[93]||(i[93]=e(`
`,-1)),s("span",I,[i[59]||(i[59]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      ",-1)),s("span",V,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[57]||(i[57]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"LibraryOptions.entry: InputOption")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"Path of library entry")])],-1)])]),default:l(()=>[i[58]||(i[58]=s("span",null,"entry",-1))]),_:1})]),i[60]||(i[60]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": [",-1)),i[61]||(i[61]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'src/main.js'",-1)),i[62]||(i[62]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"],",-1))]),i[94]||(i[94]=e(`
`,-1)),s("span",M,[i[73]||(i[73]=s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"      ",-1)),s("span",L,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[63]||(i[63]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"LibraryOptions.fileName"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," string "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"format"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," ModuleFormat"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"entryName"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=>"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," string) "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,`The name of the package file output. The default file name is the name option
of the project package.json. It can also be defined as a function taking the
format as an argument.`)])],-1)])]),default:l(()=>[i[64]||(i[64]=s("span",null,"fileName",-1))]),_:1})]),i[74]||(i[74]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": (",-1)),s("span",z,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[65]||(i[65]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"format"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ModuleFormat")])],-1)])]),default:l(()=>[i[66]||(i[66]=s("span",null,"format",-1))]),_:1})]),i[75]||(i[75]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", ",-1)),s("span",U,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[67]||(i[67]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"entryName"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": string")])],-1)])]),default:l(()=>[i[68]||(i[68]=s("span",null,"entryName",-1))]),_:1})]),i[76]||(i[76]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") ",-1)),i[77]||(i[77]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=>",-1)),i[78]||(i[78]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," `my-lib-${",-1)),s("span",W,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[69]||(i[69]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"entryName"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": string")])],-1)])]),default:l(()=>[i[70]||(i[70]=s("span",null,"entryName",-1))]),_:1})]),i[79]||(i[79]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"}.${",-1)),s("span",J,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[71]||(i[71]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"format"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ModuleFormat")])],-1)])]),default:l(()=>[i[72]||(i[72]=s("span",null,"format",-1))]),_:1})]),i[80]||(i[80]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"}.js`",-1)),i[81]||(i[81]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[95]||(i[95]=e(`
`,-1)),s("span",$,[i[84]||(i[84]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      ",-1)),s("span",q,[a(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>[...i[82]||(i[82]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"LibraryOptions.cssFileName"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," string "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,[e(`The name of the CSS file output if the library imports CSS. Defaults to the
same value as `),s("code",null,"build.lib.fileName"),e(` if it's set a string, otherwise it falls
back to the name option of the project package.json.`)])])],-1)])]),default:l(()=>[i[83]||(i[83]=s("span",null,"cssFileName",-1))]),_:1})]),i[85]||(i[85]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[86]||(i[86]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'my-lib-style'",-1)),i[87]||(i[87]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[96]||(i[96]=o(`
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>`,6))])])])]),i[102]||(i[102]=o('<h2 id="build-manifest" tabindex="-1">build.manifest <a class="header-anchor" href="#build-manifest" aria-label="Permalink to “build.manifest”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean | string</code></li><li><strong>默认：</strong> <code>false</code></li><li><strong>相关内容：</strong> <a href="/guide/backend-integration.html">后端集成</a></li></ul><p>是否生成一个 manifest 文件，包含了没有被 hash 过的资源文件名和 hash 后版本的映射，然后服务器框架可使用该映射来呈现正确的资源引入链接。</p><p>当值为字符串时，将用作相对于 <code>build.outDir</code> 的 manifest 文件路径。设置为 <code>true</code> 时，路径将是 <code>.vite/manifest.json</code>。</p><h2 id="build-ssrmanifest" tabindex="-1">build.ssrManifest <a class="header-anchor" href="#build-ssrmanifest" aria-label="Permalink to “build.ssrManifest”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean | string</code></li><li><strong>默认值：</strong> <code>false</code></li><li><strong>相关链接：</strong> <a href="/guide/ssr.html">服务端渲染</a></li></ul><p>是否生成 SSR 的 manifest 文件，以确定生产中的样式链接与资源预加载指令。</p><p>当值为字符串时，将用作相对于 <code>build.outDir</code> 的 manifest 文件路径。设置为 <code>true</code> 时，路径将是 <code>.vite/ssr-manifest.json</code>。</p><h2 id="build-ssr" tabindex="-1">build.ssr <a class="header-anchor" href="#build-ssr" aria-label="Permalink to “build.ssr”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean | string</code></li><li><strong>默认值：</strong> <code>false</code></li><li><strong>相关链接：</strong> <a href="/guide/ssr.html">服务端渲染</a></li></ul><p>生成面向 SSR 的构建。此选项的值可以是字符串，用于直接定义 SSR 的入口，也可以为 <code>true</code>，但这需要通过设置 <code>rollupOptions.input</code> 来指定 SSR 的入口。</p><h2 id="build-emitassets" tabindex="-1">build.emitAssets <a class="header-anchor" href="#build-emitassets" aria-label="Permalink to “build.emitAssets”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>在非客户端的构建过程中，静态资源并不会被输出，因为我们默认它们会作为客户端构建的一部分被输出。这个选项允许框架在其他环境的构建中强制输出这些资源。而将这些资源合并起来则是框架在构建后步骤中的责任。</p><h2 id="build-ssremitassets" tabindex="-1">build.ssrEmitAssets <a class="header-anchor" href="#build-ssremitassets" aria-label="Permalink to “build.ssrEmitAssets”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>在 SSR 构建期间，静态资源不会被输出，因为它们通常被认为是客户端构建的一部分。这个选项允许框架强制在客户端和 SSR 构建中都输出它们。将静态资源在构建后合并是框架的责任。一旦环境 API 稳定，这个选项将被 <code>build.emitAssets</code> 替代。</p><h2 id="build-minify" tabindex="-1">build.minify <a class="header-anchor" href="#build-minify" aria-label="Permalink to “build.minify”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean | &#39;terser&#39; | &#39;esbuild&#39;</code></li><li><strong>默认：</strong> 客户端构建默认为<code>&#39;esbuild&#39;</code>，SSR构建默认为 <code>false</code></li></ul><p>设置为 <code>false</code> 可以禁用最小化混淆，或是用来指定使用哪种混淆器。默认为 <a href="https://github.com/evanw/esbuild" target="_blank" rel="noreferrer">Esbuild</a>，它比 terser 快 20-40 倍，压缩率只差 1%-2%。<a href="https://github.com/privatenumber/minification-benchmarks" target="_blank" rel="noreferrer">Benchmarks</a></p><p>注意，在 lib 模式下使用 <code>&#39;es&#39;</code> 时，<code>build.minify</code> 选项不会缩减空格，因为会移除掉 pure 标注，导致破坏 tree-shaking。</p><p>当设置为 <code>&#39;terser&#39;</code> 时必须先安装 Terser。</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terser</span></span></code></pre></div><h2 id="build-terseroptions" tabindex="-1">build.terserOptions <a class="header-anchor" href="#build-terseroptions" aria-label="Permalink to “build.terserOptions”">​</a></h2><ul><li><strong>类型：</strong> <code>TerserOptions</code></li></ul><p>传递给 Terser 的更多 <a href="https://terser.org/docs/api-reference#minify-options" target="_blank" rel="noreferrer">minify 选项</a>。</p><p>此外，你还可以传递一个 <code>maxWorkers: number</code> 选项来指定最大的工作线程数。默认为 CPU 核心数减 1。</p><h2 id="build-write" tabindex="-1">build.write <a class="header-anchor" href="#build-write" aria-label="Permalink to “build.write”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>设置为 <code>false</code> 来禁用将构建后的文件写入磁盘。这常用于 <a href="/guide/api-javascript.html#build">编程式地调用 <code>build()</code></a> 在写入磁盘之前，需要对构建后的文件进行进一步处理。</p><h2 id="build-emptyoutdir" tabindex="-1">build.emptyOutDir <a class="header-anchor" href="#build-emptyoutdir" aria-label="Permalink to “build.emptyOutDir”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> 若 <code>outDir</code> 在 <code>root</code> 目录下，则为 <code>true</code></li></ul><p>默认情况下，若 <code>outDir</code> 在 <code>root</code> 目录下，则 Vite 会在构建时清空该目录。若 <code>outDir</code> 在根目录之外则会抛出一个警告避免意外删除掉重要的文件。可以设置该选项来关闭这个警告。该功能也可以通过命令行参数 <code>--emptyOutDir</code> 来使用。</p><h2 id="build-copypublicdir" tabindex="-1">build.copyPublicDir <a class="header-anchor" href="#build-copypublicdir" aria-label="Permalink to “build.copyPublicDir”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>默认情况下，Vite 会在构建阶段将 <code>publicDir</code> 目录中的所有文件复制到 <code>outDir</code> 目录中。可以通过设置该选项为 <code>false</code> 来禁用该行为。</p><h2 id="build-reportcompressedsize" tabindex="-1">build.reportCompressedSize <a class="header-anchor" href="#build-reportcompressedsize" aria-label="Permalink to “build.reportCompressedSize”">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>启用/禁用 gzip 压缩大小报告。压缩大型输出文件可能会很慢，因此禁用该功能可能会提高大型项目的构建性能。</p><h2 id="build-chunksizewarninglimit" tabindex="-1">build.chunkSizeWarningLimit <a class="header-anchor" href="#build-chunksizewarninglimit" aria-label="Permalink to “build.chunkSizeWarningLimit”">​</a></h2><ul><li><strong>类型：</strong> <code>number</code></li><li><strong>默认：</strong> <code>500</code></li></ul><p>规定触发警告的 chunk 大小。（以 kB 为单位）。它将与未压缩的 chunk 大小进行比较，因为 <a href="https://v8.dev/blog/cost-of-javascript-2019" target="_blank" rel="noreferrer">JavaScript 大小本身与执行时间相关</a>。</p><h2 id="build-watch" tabindex="-1">build.watch <a class="header-anchor" href="#build-watch" aria-label="Permalink to “build.watch”">​</a></h2><ul><li><strong>类型：</strong> <a href="https://cn.rollupjs.org/configuration-options/#watch" target="_blank" rel="noreferrer"><code>WatcherOptions</code></a><code>| null</code></li><li><strong>默认：</strong> <code>null</code></li></ul><p>设置为 <code>{}</code> 则会启用 rollup 的监听器。对于只在构建阶段或者集成流程使用的插件很常用。</p><div class="warning custom-block"><p class="custom-block-title">在 Windows Linux 子系统（WSL）上使用 Vite</p><p>某些情况下 WSL2 的文件系统监听可能无法正常工作。 查看 <a href="./server-options.html#server-watch"><code>server.watch</code></a> 了解更多细节。</p></div>',46))])}const ss=n(h,[["render",G]]);export{_ as __pageData,ss as default};
